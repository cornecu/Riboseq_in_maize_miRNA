For Riboseq reads, it is single end and RNAseq reads are pair-end, we use samtools to get the first read from pair-end file
### get first read from pair-end file
samtools view -h -f 0x0040 **_sort_name_transcriptome.bam >**_sort_name_transcriptome_1st_read.bam
samtools sort **_sort_name_transcriptome_1st_read.bam -o **_sort_name_transcriptome_1st_read_sort.bam
samtools index **_sort_name_transcriptome_1st_read_sort.bam 

### use RiboMiner to get read count at each position and use custom python script to get 60 bins density

###step1 get read at each location
RiboDensityAtEachPosition -c longest.cds.trasncripts.info.txt -i **_ribo_sort.transcriptome.bam -r ALL -s 0 -t ** -o miRNA_target_ribodensity -U nt -S miRNA_target_filter_gene_longest.cds.transcript.info.txt
RiboDensityAtEachPosition -c longest.cds.trasncripts.info.txt -i **_ribo_sort.transcriptome.bam -r ALL -s 0 -t ** -o non_miRNA_ribodensity -U nt -S non_miRNA_target_gene_longest.cds.transcript.info.txt

###step2 divide transcripts into 60 bins
python python_sum_bin.py non_miRNA_ribodensity_**_cds_nt_density.txt non_miRNA_ribodensity_**_cds_nt_density_60bins.txt
python python_sum_bin.py miRNA_ribodensity_**_cds_nt_density.txt miRNA_ribodensity_**_cds_nt_density_60bins.txt
###vi format output file
%s/\[//g; %s/\]//g; %s/, /\t/g

###step3 prepare files for DESeq2 analysis
python batch_merge_prep_for_DEseq2_Ribo_non_miRNA.py
python batch_merge_prep_for_DEseq2_Ribo_miRNA.py
python batch_merge_prep_for_DEseq2_RNA_non_miRNA.py
python batch_merge_prep_for_DEseq2_RNA_miRNA.py

###step4 bash run DEseq2 analysis
bash 60_bins_DESeq2_bash.sh

###step5 sort and concate all bin result files
python concate_all_deseq2_ribo_miRNA.py
python concate_all_deseq2_ribo_nonmiRNA.py
python concate_all_deseq2_RNA_miRNA.py
python concate_all_deseq2_RNA_nonmiRNA.py
